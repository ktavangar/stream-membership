[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "stream_membership"
authors = [
  { name = "Adrian Price-Whelan", email = "adrianmpw@gmail.com" },
  { name = "Kiyan Tavangar" },
]
description = "Quantifying stellar stream membership with probabilistic models"
readme = "README.md"
license.file = "LICENSE"
requires-python = ">=3.10"
classifiers = [
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Topic :: Scientific/Engineering",
]
dynamic = ["version"]
dependencies = [
    "numpy>=1.22",
    "astropy>=5",
    "scipy>=1.8",
    "packaging",
    "jax",
    "jaxlib",
    "jax_cosmo",  # TODO: use interpax instead?
    "numpyro",
    "numpyro_ext",
    "equinox",
    "jax_ext @ git+https://github.com/adrn/jax-ext"
]

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/stream_membership/_version.py"

[tool.hatch.env.default]
features = ["test"]
scripts.test = "pytest {args}"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.hatch.metadata]
allow-direct-references = true

# [tool.pytest.ini_options]
# minversion = "6.0"
# addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
# xfail_strict = true
# filterwarnings = [
#   "error",
# ]
# log_cli_level = "INFO"
# testpaths = [
#   "tests",
# ]

# [tool.coverage]
# run.source = ["pyia"]
# port.exclude_lines = [
#   'pragma: no cover',
#   '\.\.\.',
#   'if typing.TYPE_CHECKING:',
# ]

[[tool.mypy.overrides]]
module = [
  "numpyro.*",
  "jax_cosmo.*"
]
ignore_missing_imports = true

[tool.ruff]

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
  "F403",     # Can't detect from * import
  "RET505",   # elif after return
]
# Uncomment if using a _compat.typing backport
# typing-modules = ["pyia._compat.typing"]

[tool.ruff.lint.per-file-ignores]
# "tests/**" = ["T20"]
# "noxfile.py" = ["T20"]


# [tool.pylint]
# py-version = "3.10"
# ignore-paths = [".*/_version.py"]
# reports.output-format = "colorized"
# similarities.ignore-imports = "yes"
# messages_control.disable = [
#   "W",
#   "C",
#   "design",
#   "fixme",
#   "line-too-long",
#   "missing-module-docstring",
#   "wrong-import-position",
# ]
